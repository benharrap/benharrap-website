{"title":"Migrating from blogdown/Hugo to Quarto","markdown":{"yaml":{"title":"Migrating from blogdown/Hugo to Quarto","author":"Ben Harrap","date":"2024-12-16","toc":true,"categories":["quarto","R"]},"headingText":"Replicating the Hugo Academic URL structure","containsRefs":false,"markdown":"\n\nSo my old website became too painful to keep updated thanks to version differences across the blogdown and Hugo system I was using, so I've migrated it to a Quarto website. There were a few things that I had to figure out along the way so I've documented them here for your sake.\n\n\nThe main thing I wanted to do was replicate my old website in that the home page contained my bio and some external links, with my blog posts on a separate page. To do this I started off making a new 'Quarto Blog' project in RStudio following the [documentation on Quarto's website](https://quarto.org/docs/websites/website-blog.html). It's important to select blog, not website at this step.\n\nThe very first thing you want to do is swap the YAML between the `about.qmd` and `index.qmd` files. This is because `index.qmd` is the home page for your website. Quarto's default is to make the blog your home page, but we don't want that. Swapping the YAML puts your bio as the home page. I also renamed the `posts` folder to `post`, just in case that mattered but I'm not sure it does.\n\nThe next thing is to rename `about.qmd` to `post.qmd`. This is now your main page for your blog and it has the same URL structure as the old Hugo Academic template. This means when you migrate your blog posts from your old to your new website, the URLs won't break. Yay!\n\n## Migrating blog posts\n\n### Keeping URLs consistent\n\nQuarto's method of organising files used in blog posts is way better than blogdown/Hugo. Instead of having a `.Rmd` file in the `post` folder and keeping all the content in a separate location (was it in `static`? I never remember), you have one folder per blog post and all the files go in that folder. I.e.:\n\n```\n-   post\n  -   2024-11-25-quarto-migration\n  -   2024-08-10-phd-reflection\n  -   etc.\n```\n\nThe name of each blog post's folder will be used to create the URL. This means if you want to keep the URLs of your blog posts the same, you must give each blog post's folder the same name as the original `.Rmd` file. \n\nTo copy the content across, just copy and paste the original `.Rmd` file and rename it to `index.qmd`. Note the change in extension from `.Rmd` to `.qmd`.\n\nFor example, my blog post reflecting on my PhD experience was originally written in a file called `2024-08-10-phd-reflection.Rmd`. This means I would create a folder within the `post` folder called `2024-08-10-phd-reflection`, put my original blog post file `2024-08-10-phd-reflection.Rmd` inside this folder and rename the file to `index.qmd`. Building on the above example, this would look like:\n\n```\n-   post\n  -   2024-11-25-quarto-migration\n  -   2024-08-10-phd-reflection\n    -   index.qmd\n  -   etc.\n```\n\n### Translating `.Rmd` to `.qmd` files\n\nNow you've changed your original `.Rmd` files to `.qmd` files by just renaming them, you'll need to fix some of the YAML.\n\nThe main thing is to delete `tags: []`. Quarto only uses `categories`. Without knowing what other YAML options you were using it's hard to say what else needs to change but if you try and render your website it will either work or not work, and if it doesn't work something still needs fixing.\n\nAn example of the YAML for my PhD reflection blog post is:\n\n::: {.panel-tabset}\n\n## Old .Rmd YAML\n\n```\ntitle: \"Reflecting on my PhD experience\"\nauthor: \"Ben Harrap\"\ndate: 2024-08-10\ncategories: [\"Academic\", \"Self\"]\ntags: [\"Academic\",\"PhD\",\"Research\",\"Learning\"]\n```\n\n## New .qmd YAML\n\n```\ntitle: \"Reflecting on my PhD experience\"\nauthor: \"Ben Harrap\"\ndate: 2024-08-10\ncategories: \n  -   academia\n  -   self\n  -   phd\n```\n\n:::\n\n### Moving images, files, etc.\n\nIf your old blog posts referenced any files, such as images, you'll need to move them to the new blog post's folder and update the path in your blog post's new `index.qmd` file. My confirmation report blog post is a good example of this, it uses images, a bibliography, and a `.csl` file. After moving all the resources to the blog post's folder, I updated the YAML:\n\n::: {.panel-tabset}\n\n## Old Rmd YAML\n\n```\nbibliography: [../../static/post/confirmation-report/references.bib]\ncsl: [../../static/post/confirmation-report/harvard-the-university-of-melbourne.csl]\n```\n\n## New YAML\n\n```\nbibliography: references.bib\ncsl: \"harvard-the-university-of-melbourne.csl\"\n```\n\n:::\n\nAnd I updated the locations of the images:\n\n::: {.panel-tabset}\n\n## Old image location\n\n```\n![](/img/confirmation-report/system-overview.png)\n```\n\n## New image location\n\n```\n![](system-overview.png)\n```\n\n:::\n\n### Setting preview images\n\nIf your blog post has images in it, the default setting is to pick an image to use as a preview on your main blog page. You can specify which image you want to be used as the preview using in the post's YAML:\n\n```\nimage: \"talk.png\"\n```\n\nIf you don't want any images displayed, set the option to be false:\n\n```\nimage: false\n```\n\nIf you don't have any images in your blog post but you still specify `image: false`, Quarto will crash when trying to render your website. I had a few moments of madness figuring this out!\n\n## Modifying the home page layout\n\nI liked the home page layout of the academic theme so I wanted to replicate it somewhat. There were a few things that needed to be changed, including the social buttons and the profile picture. If you haven't already created a `custom.scss` file, go ahead and create one (see the [Quarto documentation](https://quarto.org/docs/output-formats/html-themes.html#custom-themes){target=\"_blank\"}), as we'll need it for this section.\n\nNext, in `_quarto.yml`, add the following:\n\n```\ntheme: custom.scss\n```\n\nWhich tells Quarto to use your custom styles.\n\n### Tinkering with your picture\n\nRefer to the Quarto [About Page documentation](https://quarto.org/docs/websites/website-blog.html#about-page){target=\"_blank\"} for more templates, but the `trestles` template was the one that gave me Hugo Academic vibes. To use this template, add the following to your site's `index.qmd`:\n\n```\nimage: \"img/ben.jpg\"\nabout:\n  template: trestles\n  image-shape: round\n  image-alt: \"A portrait photo of Ben, they've got their hair up in a bun, are wearing a white and navy striped jumper, and are smiling.\"\n```\n\nThe `image` argument points to the profile picture you want to use. The main problem with the image in the `trestles` template is in mobile view - it touches the navigation bar at the top and I don't like that. To fix it, add the following to your `custom.scss` file:\n\n```\n.about-image {\n  margin-top: 20px;\n  width: 15rem !important;\n  height: 15rem !important;\n}\n```\n\nThe `margin-top` is the argument that stops the image and navbar from touching, the width and height arguments are personal preference. I find in mobile the default size of the image is so large that it bumps the start of the 'About me' text off-screen. By making the image slightly smaller, a couple of lines of text are visible and we hopefully entice people to read more!\n\n### Social buttons\n\nThe default layout of the social links in the Quarto blog (see the [About Page documentation](https://quarto.org/docs/websites/website-blog.html#about-page){target=\"_blank\"}) is to create rectangular buttons. This isn't the worst, but I like the look of just using the company logos. The other downside of the Quarto default is that in mobile view it looks shit, the buttons are arranged vertically and take up the whole screen. That means if you have a lot of links people have to scroll past them to find out more about you.\n\n#### Including extra icons \n\nTo get the buttons looking like they do on my home page we need to include the `fontawesome` extension and add some custom styling. The `fontawesome` extension is needed for a couple of icons which aren't included in the default Bootstrap pack. To install the extension, run:\n\n`quarto add quarto-ext/fontawesome`\n\nfrom the RStudio terminal. Then add the links like you would according to the About Page documentation. The Font Awesome icons are included as follows:\n\n```\nlinks:\n    - text: \"{{{< fa brands bluesky >}}}\"\n      href: https://bsky.app/profile/bharrap.bsky.social\n```\n\nThe Font Awesome website has a list of all available icons ([https://fontawesome.com/search](https://fontawesome.com/search){target=\"_blank\"}), just make sure you tick the 'Free' filter.\n\n#### Changing the icon orientation\n\nAdd the following three styles to your `custom.scss` file:\n\n```\n.about-link-text {\n  font-size: 2rem;\n}\n```\n\nThis increases the size of the icons, they look comically small otherwise. Make it larger if you like.\n\n```\n.about-link {\n  border: none !important;\n}\n```\n\nThis removes the rounded border from the icons. It's ugly and we don't need it.\n\n```\n.about-links {\n  flex-direction: row !important;\n}\n```\n\nThis is **the most important bit**. This changes the orientation of the icons to be in a row, rather than a column, when viewing the website in a narrow window (e.g. on mobile or a small browser window).\n\n## Other bits\n\nThere were a couple of other bits that I found annoying to do but weren't directly related to replicating the Hugo Academic theme, so I've included them here.\n\n### Changing fonts\n\nThere seem to be a few ways to change fonts in Quarto but only the following way worked for me - in particular for the monospaced font. I like Nunito for regular text and Noto Sans Mono for monospaced text. To change the font, head over to Google Fonts and find the fonts you like.\n\nWhen you find the fonts you like click on the 'Get font' button, then '<> Get embed code', then copy the third `<link>` tag from the HTML `<head>` code. Paste that tag into `_quarto.yml` as follows:\n\n```\nformat:\n  html:\n    theme: custom.scss\n    header-includes: |\n      <link href=https://fonts.googleapis.com/css2?family=Noto+Sans+Mono:wght@100..900&family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap rel=\"stylesheet\">\n```\n\nNext, add the following to the `scss:defaults` section of your `custom.scss` file:\n\n```\n/*-- scss:defaults --*/\n\n$web-font-path: \"Break\";\n$font-family-sans-serif: \"Nunito\", sans-serif !default;\n$font-family-monospace: \"Noto Sans Mono\", monospace !default;\n```\n\nThe reason for the `$web-font-path` argument is that I couldn't figure out how to override the default monospace font being used until I came across [this handy Stack Overflow answer](https://stackoverflow.com/questions/75464776/how-to-override-the-default-font-using-locally-stored-fonts-in-themes){target=\"_blank\"}. The following two arguments just set the fonts for your sans-serif and monospace text.\n\n### Adding the 'Buy me a coffee' widget\n\nCailin, my first coffee supporter, very generously offered to buy me a coffee as thanks for the RStudio themes I made, which prompted me to create a [Buy me a coffee](https://buymeacoffee.com/benharrap){target=\"_blank\"} account. Then I needed to add the widget to my website, which is a pretty simple task.\n\nFirst, create an account if you don't already have one, then find your way to 'Website widget' in the 'Buttons & Graphics' menu. Once you've create the button, copy the script.\n\nNext, paste it in to your `_quarto.yml` file in the `header-includes` argument. Building on our example before where we already included the Google Font link, we paste the Buy me a coffee script on a new line with the same indentation as the link.\n\n```\nformat:\n  html:\n    header-includes: |\n      <link href=https://fonts.googleapis.com/css2?family=Noto+Sans+Mono:wght@100..900&family=Nunito:ital,wght@0,200..1000;1,200..1000&family=Source+Sans+3:ital,wght@0,200..900;1,200..900&display=swap rel=\"stylesheet\">\n      <script data-name=\"BMC-Widget\" data-cfasync=\"false\" src=\"https://cdnjs.buymeacoffee.com/1.0.0/widget.prod.min.js\" data-id=\"benharrap\" data-description=\"Support me on Buy me a coffee!\" data-message=\"\" data-color=\"#ffddd6\" data-position=\"Right\" data-x_margin=\"18\" data-y_margin=\"18\"></script>\n```\n\nTo change the colour of the widget, update the hex code in the `data-color` argument. If you entered a widget message when you generated it, there will be text in the `data-message` argument. Personally I would recommend turning this off as it is pops up every single time a new page is loaded and gets very annoying very quickly. If you leave the argument blank (i.e. `data-message=\"\"`) the button sits there quietly.\n\nThat's all my advice for now - and hey if you found it useful, why not buy me a coffee!","srcMarkdownNoYaml":"\n\nSo my old website became too painful to keep updated thanks to version differences across the blogdown and Hugo system I was using, so I've migrated it to a Quarto website. There were a few things that I had to figure out along the way so I've documented them here for your sake.\n\n## Replicating the Hugo Academic URL structure\n\nThe main thing I wanted to do was replicate my old website in that the home page contained my bio and some external links, with my blog posts on a separate page. To do this I started off making a new 'Quarto Blog' project in RStudio following the [documentation on Quarto's website](https://quarto.org/docs/websites/website-blog.html). It's important to select blog, not website at this step.\n\nThe very first thing you want to do is swap the YAML between the `about.qmd` and `index.qmd` files. This is because `index.qmd` is the home page for your website. Quarto's default is to make the blog your home page, but we don't want that. Swapping the YAML puts your bio as the home page. I also renamed the `posts` folder to `post`, just in case that mattered but I'm not sure it does.\n\nThe next thing is to rename `about.qmd` to `post.qmd`. This is now your main page for your blog and it has the same URL structure as the old Hugo Academic template. This means when you migrate your blog posts from your old to your new website, the URLs won't break. Yay!\n\n## Migrating blog posts\n\n### Keeping URLs consistent\n\nQuarto's method of organising files used in blog posts is way better than blogdown/Hugo. Instead of having a `.Rmd` file in the `post` folder and keeping all the content in a separate location (was it in `static`? I never remember), you have one folder per blog post and all the files go in that folder. I.e.:\n\n```\n-   post\n  -   2024-11-25-quarto-migration\n  -   2024-08-10-phd-reflection\n  -   etc.\n```\n\nThe name of each blog post's folder will be used to create the URL. This means if you want to keep the URLs of your blog posts the same, you must give each blog post's folder the same name as the original `.Rmd` file. \n\nTo copy the content across, just copy and paste the original `.Rmd` file and rename it to `index.qmd`. Note the change in extension from `.Rmd` to `.qmd`.\n\nFor example, my blog post reflecting on my PhD experience was originally written in a file called `2024-08-10-phd-reflection.Rmd`. This means I would create a folder within the `post` folder called `2024-08-10-phd-reflection`, put my original blog post file `2024-08-10-phd-reflection.Rmd` inside this folder and rename the file to `index.qmd`. Building on the above example, this would look like:\n\n```\n-   post\n  -   2024-11-25-quarto-migration\n  -   2024-08-10-phd-reflection\n    -   index.qmd\n  -   etc.\n```\n\n### Translating `.Rmd` to `.qmd` files\n\nNow you've changed your original `.Rmd` files to `.qmd` files by just renaming them, you'll need to fix some of the YAML.\n\nThe main thing is to delete `tags: []`. Quarto only uses `categories`. Without knowing what other YAML options you were using it's hard to say what else needs to change but if you try and render your website it will either work or not work, and if it doesn't work something still needs fixing.\n\nAn example of the YAML for my PhD reflection blog post is:\n\n::: {.panel-tabset}\n\n## Old .Rmd YAML\n\n```\ntitle: \"Reflecting on my PhD experience\"\nauthor: \"Ben Harrap\"\ndate: 2024-08-10\ncategories: [\"Academic\", \"Self\"]\ntags: [\"Academic\",\"PhD\",\"Research\",\"Learning\"]\n```\n\n## New .qmd YAML\n\n```\ntitle: \"Reflecting on my PhD experience\"\nauthor: \"Ben Harrap\"\ndate: 2024-08-10\ncategories: \n  -   academia\n  -   self\n  -   phd\n```\n\n:::\n\n### Moving images, files, etc.\n\nIf your old blog posts referenced any files, such as images, you'll need to move them to the new blog post's folder and update the path in your blog post's new `index.qmd` file. My confirmation report blog post is a good example of this, it uses images, a bibliography, and a `.csl` file. After moving all the resources to the blog post's folder, I updated the YAML:\n\n::: {.panel-tabset}\n\n## Old Rmd YAML\n\n```\nbibliography: [../../static/post/confirmation-report/references.bib]\ncsl: [../../static/post/confirmation-report/harvard-the-university-of-melbourne.csl]\n```\n\n## New YAML\n\n```\nbibliography: references.bib\ncsl: \"harvard-the-university-of-melbourne.csl\"\n```\n\n:::\n\nAnd I updated the locations of the images:\n\n::: {.panel-tabset}\n\n## Old image location\n\n```\n![](/img/confirmation-report/system-overview.png)\n```\n\n## New image location\n\n```\n![](system-overview.png)\n```\n\n:::\n\n### Setting preview images\n\nIf your blog post has images in it, the default setting is to pick an image to use as a preview on your main blog page. You can specify which image you want to be used as the preview using in the post's YAML:\n\n```\nimage: \"talk.png\"\n```\n\nIf you don't want any images displayed, set the option to be false:\n\n```\nimage: false\n```\n\nIf you don't have any images in your blog post but you still specify `image: false`, Quarto will crash when trying to render your website. I had a few moments of madness figuring this out!\n\n## Modifying the home page layout\n\nI liked the home page layout of the academic theme so I wanted to replicate it somewhat. There were a few things that needed to be changed, including the social buttons and the profile picture. If you haven't already created a `custom.scss` file, go ahead and create one (see the [Quarto documentation](https://quarto.org/docs/output-formats/html-themes.html#custom-themes){target=\"_blank\"}), as we'll need it for this section.\n\nNext, in `_quarto.yml`, add the following:\n\n```\ntheme: custom.scss\n```\n\nWhich tells Quarto to use your custom styles.\n\n### Tinkering with your picture\n\nRefer to the Quarto [About Page documentation](https://quarto.org/docs/websites/website-blog.html#about-page){target=\"_blank\"} for more templates, but the `trestles` template was the one that gave me Hugo Academic vibes. To use this template, add the following to your site's `index.qmd`:\n\n```\nimage: \"img/ben.jpg\"\nabout:\n  template: trestles\n  image-shape: round\n  image-alt: \"A portrait photo of Ben, they've got their hair up in a bun, are wearing a white and navy striped jumper, and are smiling.\"\n```\n\nThe `image` argument points to the profile picture you want to use. The main problem with the image in the `trestles` template is in mobile view - it touches the navigation bar at the top and I don't like that. To fix it, add the following to your `custom.scss` file:\n\n```\n.about-image {\n  margin-top: 20px;\n  width: 15rem !important;\n  height: 15rem !important;\n}\n```\n\nThe `margin-top` is the argument that stops the image and navbar from touching, the width and height arguments are personal preference. I find in mobile the default size of the image is so large that it bumps the start of the 'About me' text off-screen. By making the image slightly smaller, a couple of lines of text are visible and we hopefully entice people to read more!\n\n### Social buttons\n\nThe default layout of the social links in the Quarto blog (see the [About Page documentation](https://quarto.org/docs/websites/website-blog.html#about-page){target=\"_blank\"}) is to create rectangular buttons. This isn't the worst, but I like the look of just using the company logos. The other downside of the Quarto default is that in mobile view it looks shit, the buttons are arranged vertically and take up the whole screen. That means if you have a lot of links people have to scroll past them to find out more about you.\n\n#### Including extra icons \n\nTo get the buttons looking like they do on my home page we need to include the `fontawesome` extension and add some custom styling. The `fontawesome` extension is needed for a couple of icons which aren't included in the default Bootstrap pack. To install the extension, run:\n\n`quarto add quarto-ext/fontawesome`\n\nfrom the RStudio terminal. Then add the links like you would according to the About Page documentation. The Font Awesome icons are included as follows:\n\n```\nlinks:\n    - text: \"{{{< fa brands bluesky >}}}\"\n      href: https://bsky.app/profile/bharrap.bsky.social\n```\n\nThe Font Awesome website has a list of all available icons ([https://fontawesome.com/search](https://fontawesome.com/search){target=\"_blank\"}), just make sure you tick the 'Free' filter.\n\n#### Changing the icon orientation\n\nAdd the following three styles to your `custom.scss` file:\n\n```\n.about-link-text {\n  font-size: 2rem;\n}\n```\n\nThis increases the size of the icons, they look comically small otherwise. Make it larger if you like.\n\n```\n.about-link {\n  border: none !important;\n}\n```\n\nThis removes the rounded border from the icons. It's ugly and we don't need it.\n\n```\n.about-links {\n  flex-direction: row !important;\n}\n```\n\nThis is **the most important bit**. This changes the orientation of the icons to be in a row, rather than a column, when viewing the website in a narrow window (e.g. on mobile or a small browser window).\n\n## Other bits\n\nThere were a couple of other bits that I found annoying to do but weren't directly related to replicating the Hugo Academic theme, so I've included them here.\n\n### Changing fonts\n\nThere seem to be a few ways to change fonts in Quarto but only the following way worked for me - in particular for the monospaced font. I like Nunito for regular text and Noto Sans Mono for monospaced text. To change the font, head over to Google Fonts and find the fonts you like.\n\nWhen you find the fonts you like click on the 'Get font' button, then '<> Get embed code', then copy the third `<link>` tag from the HTML `<head>` code. Paste that tag into `_quarto.yml` as follows:\n\n```\nformat:\n  html:\n    theme: custom.scss\n    header-includes: |\n      <link href=https://fonts.googleapis.com/css2?family=Noto+Sans+Mono:wght@100..900&family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap rel=\"stylesheet\">\n```\n\nNext, add the following to the `scss:defaults` section of your `custom.scss` file:\n\n```\n/*-- scss:defaults --*/\n\n$web-font-path: \"Break\";\n$font-family-sans-serif: \"Nunito\", sans-serif !default;\n$font-family-monospace: \"Noto Sans Mono\", monospace !default;\n```\n\nThe reason for the `$web-font-path` argument is that I couldn't figure out how to override the default monospace font being used until I came across [this handy Stack Overflow answer](https://stackoverflow.com/questions/75464776/how-to-override-the-default-font-using-locally-stored-fonts-in-themes){target=\"_blank\"}. The following two arguments just set the fonts for your sans-serif and monospace text.\n\n### Adding the 'Buy me a coffee' widget\n\nCailin, my first coffee supporter, very generously offered to buy me a coffee as thanks for the RStudio themes I made, which prompted me to create a [Buy me a coffee](https://buymeacoffee.com/benharrap){target=\"_blank\"} account. Then I needed to add the widget to my website, which is a pretty simple task.\n\nFirst, create an account if you don't already have one, then find your way to 'Website widget' in the 'Buttons & Graphics' menu. Once you've create the button, copy the script.\n\nNext, paste it in to your `_quarto.yml` file in the `header-includes` argument. Building on our example before where we already included the Google Font link, we paste the Buy me a coffee script on a new line with the same indentation as the link.\n\n```\nformat:\n  html:\n    header-includes: |\n      <link href=https://fonts.googleapis.com/css2?family=Noto+Sans+Mono:wght@100..900&family=Nunito:ital,wght@0,200..1000;1,200..1000&family=Source+Sans+3:ital,wght@0,200..900;1,200..900&display=swap rel=\"stylesheet\">\n      <script data-name=\"BMC-Widget\" data-cfasync=\"false\" src=\"https://cdnjs.buymeacoffee.com/1.0.0/widget.prod.min.js\" data-id=\"benharrap\" data-description=\"Support me on Buy me a coffee!\" data-message=\"\" data-color=\"#ffddd6\" data-position=\"Right\" data-x_margin=\"18\" data-y_margin=\"18\"></script>\n```\n\nTo change the colour of the widget, update the hex code in the `data-color` argument. If you entered a widget message when you generated it, there will be text in the `data-message` argument. Personally I would recommend turning this off as it is pops up every single time a new page is loaded and gets very annoying very quickly. If you leave the argument blank (i.e. `data-message=\"\"`) the button sits there quietly.\n\nThat's all my advice for now - and hey if you found it useful, why not buy me a coffee!"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.31","grid":{"body-width":"1000px","sidebar-width":"200px","margin-width":"300px"},"header-includes":["<link href=https://fonts.googleapis.com/css2?family=Noto+Sans+Mono:wght@100..900&family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap rel=\"stylesheet\">\n<script data-name=\"BMC-Widget\" data-cfasync=\"false\" src=\"https://cdnjs.buymeacoffee.com/1.0.0/widget.prod.min.js\" data-id=\"benharrap\" data-description=\"Support me on Buy me a coffee!\" data-message=\"\" data-color=\"#ffddd6\" data-position=\"Right\" data-x_margin=\"18\" data-y_margin=\"18\"></script>\n<!-- Google tag (gtag.js) -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-XYMGR0N804\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n  gtag('config', 'G-XYMGR0N804');\n</script>\n"],"theme":"../../custom.scss","linestretch":2,"monobackgroundcolor":"#ffddd6","title-block-banner":false,"title":"Migrating from blogdown/Hugo to Quarto","author":"Ben Harrap","date":"2024-12-16","categories":["quarto","R"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}