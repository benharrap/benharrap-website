{
  "hash": "a8b3a93cdab8eaf058a0658dcec5ddcd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Stata to R code translations\"\nauthor: \"Ben Harrap\"\ndate: 2025-01-10\ntoc: true\ncategories: \n  - code\n  - R\n  - Stata\n  - research\nimage: false\n---\n\n::: {.cell}\n\n:::\n\n\n\nMaking the transition from Stata to R can be challenging as the two languages are different in some fundamental ways. My initial training in biostatistics was using Stata, however I made a concerted effort to learn R by doing my entire PhD using the language. There are some things that I still struggle with in R that I found a lot easier in Stata, but that's ok - we're all still learning! \n\nThis post acts as a reference to provide Stata and R code side-by-side to help people switching between the two languages. There's a few things to note before diving in:\n\n- All examples are based on the `auto` dataset from Stata.\n  - In Stata this is accessed using `sysuse auto`.\n  - In R this is accessed by reading the Stata dataset using `auto <- haven::read_dta(\"<path-to-stata-goes-here>/auto.dta\")`.\n- I've tested these examples using Stata version 15.\n- R packages are stated where relevant, however `tidyverse` is generally used over base R.\n- The ChatGPT <a href=\"https://chatgpt.com/g/g-dDlKTFvbT-stata-to-r-code-translator\" target=\"_blank\">Stata to R Code Translator</a> provided some assistance.\n\n## Workflow differences\n\nI'll briefly outline some important things to know when switching from Stata to R, because while R can do everything Stata can do, it goes about it differently.\n\n### Packages\n\nI mentioned packages already, they're the reason that R is such a powerful tool. Packages can be thought of as a collection of functions, typically centered around a particular theme or method. Base R is refers to the functions included by default when you install R on your machine. The main thing to know with R packages if you can imagine a function someone's probably already written a package for it.\n\nI personally find that base R code can be quite arcane to read, which is why I'm such a `tidyverse` fan. The `tidyverse` is a collection of packages that is incredibly popular and for good reason, the design of the packages share consistent philophy around how code should be written (see [their website](https://www.tidyverse.org/packages/){target=\"_blank\"} if you want to learn more).\n\nTo install R packages just run `install.packages(\"<package name>\")`. To use the package, run `library(<package name>)` to load in all the functions from that package into your current R session.\n\nYou can also use specific functions from packages by loading them in specifically (using `include.only`) or by explicitly calling the function without loading the package (using `::`), demonstrated in the example below.\n\n::: {.panel-tabset}\n## Load specific function\n\n```\nlibrary(haven, include.only = \"read_dta\")\nauto <- read_dta(\"/Applications/Stata/auto.dta\")\n```\n\n## Call function without loading\n```\nauto <- haven::read_dta(\"/Applications/Stata/auto.dta\")\n```\n:::\n\n### Multiple datasets\n\nStata can *sort of* do this but nothing like how R does. Instead of using `frame` to create and manage multiple in-memory datasets and `frame change` to switch between datasets, you can just load multiple datasets into R, assign them names, and simply call these names when going about your work, no explicit switching required. I won't go into detail here as you'll very quickly figure this out as you start to use R, but I think it's one of the greatest advantages of R over Stata.\n\n### Pipes\n\nUsing the `auto` dataset as an example, say we wanted to create a dataset of only domestic cars and analyse their weight to length ratio by brand. In Stata, your each line of your code would be executed sequentially and independently with the results window returning something after each step:\n\n```\nsysuse auto\ndrop if foreign == 1\ngen wgt_len_ratio = weight/length\ngen brand = substr(make, 1, ustrpos(make, \" \")-1)\nsort brand\nby brand: summarize wgt_len_ratio\n```\n\nYou can write R code in this fashion too but there's something nice about using pipes. You can think of pipes as literal pipes, you put something in at one end of the pipe and something comes out the other end. In our case, data goes in one end, your code is what happens inside of the pipe, and the result of your code is what comes out the other end. In R there's two different pipes, the base pipe `|>` and the `magrittr` pipe `%>%`. You probably don't need to worry about the difference, but for those interested see [this post on the tidyverse website](https://www.tidyverse.org/blog/2023/04/base-vs-magrittr-pipe/){target=\"_blank\"}.\n\nThe same operation as above in R could be done as:\n\n```\nauto <- haven::read_dta(\"/Applications/Stata/auto.dta\")\n\nauto |> \n  filter(foreign == 0) |> \n  mutate(\n    wgt_len_ratio = weight/length,\n    brand = str_extract(make, \"\\\\w+\")\n    ) |> \n  group_by(brand) |> \n  summarise(\n    n = n(),\n    mean = mean(wgt_len_ratio),\n    sd = sd(wgt_len_ratio),\n    min = min(wgt_len_ratio),\n    max = max(wgt_len_ratio)\n  )\n```\n\nIt's a little longer in length than the Stata example, however I find pipes and `tidyverse` in particular make the code more readable and easier to follow and navigate (the indentations also help). By running the whole \n\n### Assigning output\n\nOne of the main things to adjust to in R is the need to assign your output. In Stata, if you were to create a new variable, you would just write `gen new_var = old_var*2` and it would automatically create `new_var` in the current dataset. Similarly, if you run a regression model, Stata stores a bunch of information in the background that you can access, such as via the `lincom` and `margins` functions.\n\nIn R, the default is to display the output of your code in the console (similar to Stata's results window). So if you were to run `auto |> mutate(new_var = 1)` it would just print the result in the console. Instead, you need to assign the output using the assignment operator `<-` to an object, either an existing or a new one. For example:\n\n-   `auto <- auto |> mutate(new_var = 1)` writes over the object named `auto`, which is our dataset\n-   `auto_new <- auto |> mutate(new_var = 1)` creates a new object called `auto_new` and leaves the original `auto` object unchanged\n\nOne aspect of this feature is that it completely circumvents the need for Stata's `preserve` and `restore`. Just assign the output of your code to a new object where you would instead have used `preserve` and `restore`. This makes it handy for analyses of data at different stages of cleaning or analysis.\n\n### Further resources\n\nThe books I would recommend using to keep learning from are:\n\n-   [R for Data Science](https://r4ds.hadley.nz/)\n-   [Advanced R](https://adv-r.hadley.nz/)\n-   [ggplot2: Elegant Graphics for Data Analysis](https://ggplot2-book.org/)\n-   [Fundamentals of Data Visualization](https://clauswilke.com/dataviz/)\n\nNote that Fundamentals of Data Visualization doesn't include the R code by default. Instead, Claus provides a link on the welcome page to the book's GitHub repo, which you can search through to find the code to replicate the graphs in the book.\n\n## Converting Stata to R code\n\n### Modifying variables\n\nA lot of data cleaning work involves modifying or creating variables in some way. In the `tidyverse`, variables are typically created or modified using the `mutate()` function.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"ykbsoyucwb\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#ykbsoyucwb table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#ykbsoyucwb thead, #ykbsoyucwb tbody, #ykbsoyucwb tfoot, #ykbsoyucwb tr, #ykbsoyucwb td, #ykbsoyucwb th {\n  border-style: none;\n}\n\n#ykbsoyucwb p {\n  margin: 0;\n  padding: 0;\n}\n\n#ykbsoyucwb .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ykbsoyucwb .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ykbsoyucwb .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ykbsoyucwb .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ykbsoyucwb .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ykbsoyucwb .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ykbsoyucwb .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ykbsoyucwb .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ykbsoyucwb .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ykbsoyucwb .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ykbsoyucwb .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ykbsoyucwb .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ykbsoyucwb .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#ykbsoyucwb .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ykbsoyucwb .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ykbsoyucwb .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ykbsoyucwb .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ykbsoyucwb .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ykbsoyucwb .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ykbsoyucwb .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ykbsoyucwb .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ykbsoyucwb .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#ykbsoyucwb .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ykbsoyucwb .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ykbsoyucwb .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ykbsoyucwb .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ykbsoyucwb .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ykbsoyucwb .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ykbsoyucwb .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ykbsoyucwb .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ykbsoyucwb .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ykbsoyucwb .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ykbsoyucwb .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ykbsoyucwb .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ykbsoyucwb .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ykbsoyucwb .gt_left {\n  text-align: left;\n}\n\n#ykbsoyucwb .gt_center {\n  text-align: center;\n}\n\n#ykbsoyucwb .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ykbsoyucwb .gt_font_normal {\n  font-weight: normal;\n}\n\n#ykbsoyucwb .gt_font_bold {\n  font-weight: bold;\n}\n\n#ykbsoyucwb .gt_font_italic {\n  font-style: italic;\n}\n\n#ykbsoyucwb .gt_super {\n  font-size: 65%;\n}\n\n#ykbsoyucwb .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#ykbsoyucwb .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ykbsoyucwb .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ykbsoyucwb .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ykbsoyucwb .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ykbsoyucwb .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ykbsoyucwb .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#ykbsoyucwb .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#ykbsoyucwb div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" style=\"table-layout:fixed;width:100%;\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <colgroup>\n    <col style=\"width:20%;\"/>\n    <col style=\"width:30%;\"/>\n    <col style=\"width:30%;\"/>\n    <col style=\"width:20%;\"/>\n  </colgroup>\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Function\">Function</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Stata\">Stata</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"R\">R</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Note\">Note</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Function\" class=\"gt_row gt_left\"><span data-qmd-base64=\"TWFraW5nL21vZGlmeWluZyB2YXJpYWJsZXM=\"><span class='gt_from_md'>Making/modifying variables</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+Z2VuIHdlaWdodF9rZyA9IHdlaWdodC8yLjIwNTwvY29kZT4=\"><span class='gt_from_md'><code>gen weight_kg = weight/2.205</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+bXV0YXRlKHdlaWdodF9rZyA9IHdlaWdodC8yLjIwNSk8L2NvZGU+\"><span class='gt_from_md'><code>mutate(weight_kg = weight/2.205)</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"TWFraW5nIGFuZCBtb2RpZnlpbmcgdmFyaWFibGVzIGlzIGRvbmUgdXNpbmcgPGNvZGU+bXV0YXRlPC9jb2RlPiBhbmQgb3ZlcndyaXRlcyB2YXJpYWJsZXMgd2l0aG91dCB3YXJuaW5nLCB1bmxpa2UgU3RhdGE=\"><span class='gt_from_md'>Making and modifying variables is done using <code>mutate</code> and overwrites variables without warning, unlike Stata</span></span></td></tr>\n    <tr><td headers=\"Function\" class=\"gt_row gt_left\"><span data-qmd-base64=\"TWFrZSBhIHN0cmluZyB2YXJpYWJsZSBudW1lcmlj\"><span class='gt_from_md'>Make a string variable numeric</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+ZGVzdHJpbmcgcHJpY2U8L2NvZGU+\"><span class='gt_from_md'><code>destring price</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+bXV0YXRlKHByaWNlID0gYXMubnVtZXJpYyhwcmljZSk8L2NvZGU+\"><span class='gt_from_md'><code>mutate(price = as.numeric(price)</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"UHJpY2UgaXMgYWxyZWFkeSBhIG51bWVyaWMgdmFyaWFibGUsIHlvdSBnZXQgdGhlIGlkZWEgdGhvdWdoLiA8Y29kZT5hcy5udW1lcmljPC9jb2RlPiBpcyBhIGJhc2UgUiBmdW5jdGlvbg==\"><span class='gt_from_md'>Price is already a numeric variable, you get the idea though. <code>as.numeric</code> is a base R function</span></span></td></tr>\n    <tr><td headers=\"Function\" class=\"gt_row gt_left\"><span data-qmd-base64=\"TWFrZSBhIG51bWVyaWMgdmFyaWFibGUgaW50byBhIHN0cmluZw==\"><span class='gt_from_md'>Make a numeric variable into a string</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+dG9zdHJpbmcgcHJpY2U8L2NvZGU+\"><span class='gt_from_md'><code>tostring price</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+bXV0YXRlKHByaWNlID0gYXMuY2hhcmFjdGVyKHByaWNlKTwvY29kZT4=\"><span class='gt_from_md'><code>mutate(price = as.character(price)</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+YXMuY2hhcmFjdGVyPC9jb2RlPiBpcyBhIGJhc2UgUiBmdW5jdGlvbg==\"><span class='gt_from_md'><code>as.character</code> is a base R function</span></span></td></tr>\n    <tr><td headers=\"Function\" class=\"gt_row gt_left\"><span data-qmd-base64=\"TWFrZSBhIHZhcmlhYmxlIG1pc3Npbmc=\"><span class='gt_from_md'>Make a variable missing</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+Z2VuIG5ld192YXIgPSAuPC9jb2RlPg==\"><span class='gt_from_md'><code>gen new_var = .</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+bXV0YXRlKG5ld192YXIgPSBOQSk8L2NvZGU+\"><span class='gt_from_md'><code>mutate(new_var = NA)</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"UmVtZW1iZXIgdGhhdCBTdGF0YSB0cmVhdHMgbWlzc2luZyB2YWx1ZXMgYXMgbGFyZ2UgcG9zaXRpdmUgbnVtYmVycz8gWWVhaCBSIGRvZXNu4oCZdCBkbyB0aGF0\"><span class='gt_from_md'>Remember that Stata treats missing values as large positive numbers? Yeah R doesn’t do that</span></span></td></tr>\n    <tr><td headers=\"Function\" class=\"gt_row gt_left\"><span data-qmd-base64=\"Q3JlYXRlIGEgdmFyaWFibGUgdXNpbmcgY29uZGl0aW9ucw==\"><span class='gt_from_md'>Create a variable using conditions</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+Z2VuIHByaWNlXzEwayA9IDA8L2NvZGU+IHRoZW4gPGNvZGU+cmVwbGFjZSBwcmljZV8xMGsgPSAxIGlmIHByaWNlICZndDs9MTAwMDA8L2NvZGU+\"><span class='gt_from_md'><code>gen price_10k = 0</code> then <code>replace price_10k = 1 if price &gt;=10000</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+bXV0YXRlKHByaWNlXzEwayA9IGNhc2Vfd2hlbihwcmljZSAmZ3Q7PSAxMDAwMCB+IDEsIC5kZWZhdWx0ID0gMCkpPC9jb2RlPg==\"><span class='gt_from_md'><code>mutate(price_10k = case_when(price &gt;= 10000 ~ 1, .default = 0))</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+Y2FzZV93aGVuKCk8L2NvZGU+IGNhbiBiZSB1c2VkIGZvciBtYW55IG9mIHRoZSBmdW5jdGlvbnMgaW4gPGNvZGU+ZWdlbjwvY29kZT4gdG9v\"><span class='gt_from_md'><code>case_when()</code> can be used for many of the functions in <code>egen</code> too</span></span></td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n### Other basics\n\nThese functions are more about performing other operations to datasets than changing or modifying variables.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"mppmilxrqg\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#mppmilxrqg table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#mppmilxrqg thead, #mppmilxrqg tbody, #mppmilxrqg tfoot, #mppmilxrqg tr, #mppmilxrqg td, #mppmilxrqg th {\n  border-style: none;\n}\n\n#mppmilxrqg p {\n  margin: 0;\n  padding: 0;\n}\n\n#mppmilxrqg .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#mppmilxrqg .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#mppmilxrqg .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#mppmilxrqg .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#mppmilxrqg .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#mppmilxrqg .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mppmilxrqg .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#mppmilxrqg .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#mppmilxrqg .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#mppmilxrqg .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#mppmilxrqg .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#mppmilxrqg .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#mppmilxrqg .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#mppmilxrqg .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#mppmilxrqg .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#mppmilxrqg .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#mppmilxrqg .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#mppmilxrqg .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#mppmilxrqg .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mppmilxrqg .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#mppmilxrqg .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#mppmilxrqg .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#mppmilxrqg .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mppmilxrqg .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#mppmilxrqg .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#mppmilxrqg .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mppmilxrqg .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mppmilxrqg .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#mppmilxrqg .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mppmilxrqg .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#mppmilxrqg .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mppmilxrqg .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#mppmilxrqg .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mppmilxrqg .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#mppmilxrqg .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mppmilxrqg .gt_left {\n  text-align: left;\n}\n\n#mppmilxrqg .gt_center {\n  text-align: center;\n}\n\n#mppmilxrqg .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#mppmilxrqg .gt_font_normal {\n  font-weight: normal;\n}\n\n#mppmilxrqg .gt_font_bold {\n  font-weight: bold;\n}\n\n#mppmilxrqg .gt_font_italic {\n  font-style: italic;\n}\n\n#mppmilxrqg .gt_super {\n  font-size: 65%;\n}\n\n#mppmilxrqg .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#mppmilxrqg .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#mppmilxrqg .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#mppmilxrqg .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#mppmilxrqg .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#mppmilxrqg .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#mppmilxrqg .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#mppmilxrqg .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#mppmilxrqg div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" style=\"table-layout:fixed;width:100%;\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <colgroup>\n    <col style=\"width:20%;\"/>\n    <col style=\"width:30%;\"/>\n    <col style=\"width:30%;\"/>\n    <col style=\"width:20%;\"/>\n  </colgroup>\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Function\">Function</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Stata\">Stata</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"R\">R</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Note\">Note</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Function\" class=\"gt_row gt_left\"><span data-qmd-base64=\"UmVuYW1pbmcgdmFyaWFibGVz\"><span class='gt_from_md'>Renaming variables</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+cmVuYW1lIHdlaWdodCB3ZWlnaHRfbGJzPC9jb2RlPg==\"><span class='gt_from_md'><code>rename weight weight_lbs</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+cmVuYW1lKHdlaWdodF9sYnMgd2VpZ2h0KTwvY29kZT4=\"><span class='gt_from_md'><code>rename(weight_lbs weight)</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"VGhlIGFyZ3VtZW50cyBhcmUgYmFjayB0byBmcm9udCBpbiBSLiBTdGF0YSBpcyA8Y3VycmVudCBuYW1lPiA8bmV3IG5hbWU+LCA8Y29kZT5kcGx5cjwvY29kZT4gaXMgPG5ldyBuYW1lPiA8Y3VycmVudCBuYW1lPg==\"><span class='gt_from_md'>The arguments are back to front in R. Stata is <current name> <new name>, <code>dplyr</code> is <new name> <current name></span></span></td></tr>\n    <tr><td headers=\"Function\" class=\"gt_row gt_left\"><span data-qmd-base64=\"RHJvcHBpbmcgdmFyaWFibGVz\"><span class='gt_from_md'>Dropping variables</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+ZHJvcCBtcGc8L2NvZGU+\"><span class='gt_from_md'><code>drop mpg</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+c2VsZWN0KC1tcGcpPC9jb2RlPg==\"><span class='gt_from_md'><code>select(-mpg)</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"VGhlIG1pbnVzIGlzIHdoYXQgZHJvcHMgdGhlIHZhcmlhYmxlLiBXaXRob3V0IHRoZSBtaW51cyBpdCB3b3VsZCBpbnN0ZWFkIGtlZXAgb25seSA8Y29kZT5tcGc8L2NvZGU+\"><span class='gt_from_md'>The minus is what drops the variable. Without the minus it would instead keep only <code>mpg</code></span></span></td></tr>\n    <tr><td headers=\"Function\" class=\"gt_row gt_left\"><span data-qmd-base64=\"RHJvcHBpbmcgb2JzZXJ2YXRpb25z\"><span class='gt_from_md'>Dropping observations</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+ZHJvcCBpZiBmb3JlaWduID09IDE8L2NvZGU+\"><span class='gt_from_md'><code>drop if foreign == 1</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+ZmlsdGVyKGZvcmVpZ24gIT0gMSk8L2NvZGU+\"><span class='gt_from_md'><code>filter(foreign != 1)</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"RmlsdGVyIGtlZXBzIG9ic2VydmF0aW9ucyB0aGF0IG1lZXQgY3JpdGVyaWEsIHJhdGhlciB0aGFuIGRyb3BzIHRoZW0sIGhlbmNlIHRoZSBpbnZlcnNlIGNvbmRpdGlvbg==\"><span class='gt_from_md'>Filter keeps observations that meet criteria, rather than drops them, hence the inverse condition</span></span></td></tr>\n    <tr><td headers=\"Function\" class=\"gt_row gt_left\"><span data-qmd-base64=\"UmVzaGFwaW5nIHdpZGVy\"><span class='gt_from_md'>Reshaping wider</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+cmVzaGFwZSB3aWRlIG1wZywgaShtYWtlKSBqKHR1cm4pPC9jb2RlPg==\"><span class='gt_from_md'><code>reshape wide mpg, i(make) j(turn)</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+cGl2b3Rfd2lkZXIobmFtZXNfZnJvbSA9ICd0dXJuJywgdmFsdWVzX2Zyb20gPSAnbXBnJyk8L2NvZGU+\"><span class='gt_from_md'><code>pivot_wider(names_from = 'turn', values_from = 'mpg')</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"wqA=\"><span class='gt_from_md'> </span></span></td></tr>\n    <tr><td headers=\"Function\" class=\"gt_row gt_left\"><span data-qmd-base64=\"UmVzaGFwaW5nIGxvbmdlcg==\"><span class='gt_from_md'>Reshaping longer</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+cmVzaGFwZSBsb25nIHJlcCwgaShtYWtlKSBqKG5ld3Zhcik8L2NvZGU+\"><span class='gt_from_md'><code>reshape long rep, i(make) j(newvar)</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+cGl2b3RfbG9uZ2VyKGMocmVwNzgscmVwNzkpLCB2YWx1ZXNfdG8gPSAnbmV3dmFyJyk8L2NvZGU+\"><span class='gt_from_md'><code>pivot_longer(c(rep78,rep79), values_to = 'newvar')</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"VG8gcnVuIHRoZXNlIGV4YW1wbGVzLCB5b3XigJlkIGZpcnN0IG5lZWQgdG8gY3JlYXRlIDxjb2RlPnJlcDc5PC9jb2RlPiwgd2hpY2ggSSBjcmVhdGVkIGFzIDxjb2RlPnJlcDc4KzE8L2NvZGU+\"><span class='gt_from_md'>To run these examples, you’d first need to create <code>rep79</code>, which I created as <code>rep78+1</code></span></span></td></tr>\n    <tr><td headers=\"Function\" class=\"gt_row gt_left\"><span data-qmd-base64=\"U3VtbWFyaXNpbmcgZGF0YQ==\"><span class='gt_from_md'>Summarising data</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+c3VtbWFyaXplIG1wZzwvY29kZT4=\"><span class='gt_from_md'><code>summarize mpg</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+c3VtbWFyaXNlKG9icyA9IG4obXBnKSwgbWVhbiA9IG1lYW4obXBnKSwgc3RkZGV2ID0gc2QobXBnKSwgbWluID0gbWluKG1wZyksIG1heCA9IG1heChtcGcpPC9jb2RlPg==\"><span class='gt_from_md'><code>summarise(obs = n(mpg), mean = mean(mpg), stddev = sd(mpg), min = min(mpg), max = max(mpg)</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+ZHBseXI8L2NvZGU+IHRyZWF0cyBzdW1tYXJpc2UgYW5kIHN1bW1hcml6ZSBhcyBzeW5vbnltcywgc28gdXNlIHdoaWNoZXZlciB5b3UgcHJlZmVyLg==\"><span class='gt_from_md'><code>dplyr</code> treats summarise and summarize as synonyms, so use whichever you prefer.</span></span></td></tr>\n    <tr><td headers=\"Function\" class=\"gt_row gt_left\"><span data-qmd-base64=\"R3JvdXBpbmcgb3BlcmF0aW9ucw==\"><span class='gt_from_md'>Grouping operations</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+YnkgZm9yZWlnbjo8L2NvZGU+\"><span class='gt_from_md'><code>by foreign:</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+Z3JvdXBfYnkoZm9yZWlnbik8L2NvZGU+\"><span class='gt_from_md'><code>group_by(foreign)</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"WW91IHdvdWxkIHVzZSA8Y29kZT5ncm91cF9ieSgpPC9jb2RlPiBpbiB0aGUgbGluZSBiZWZvcmUgdGhlIG9wZXJhdGlvbiB0aGF0IHlvdSB3YW50IHRvIGFwcGx5IHRoZSBncm91cGluZyB0by4gT25jZSB5b3Ugbm8gbG9uZ2VyIG5lZWQgdGhlIGdyb3VwaW5nIHRvIGJlIGluIHBsYWNlLCB1c2UgPGNvZGU+dW5ncm91cCgpPC9jb2RlPiwgb3RoZXJ3aXNlIGFsbCBzdWJzZXF1ZW50IG9wZXJhdGlvbnMgd2lsbCBiZSBncm91cGVk\"><span class='gt_from_md'>You would use <code>group_by()</code> in the line before the operation that you want to apply the grouping to. Once you no longer need the grouping to be in place, use <code>ungroup()</code>, otherwise all subsequent operations will be grouped</span></span></td></tr>\n    <tr><td headers=\"Function\" class=\"gt_row gt_left\"><span data-qmd-base64=\"U2VlZCBzZXR0aW5n\"><span class='gt_from_md'>Seed setting</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+c2V0IHNlZWQgMTIzNDwvY29kZT4=\"><span class='gt_from_md'><code>set seed 1234</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+c2V0LnNlZWQoMTIzNCk8L2NvZGU+\"><span class='gt_from_md'><code>set.seed(1234)</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"wqA=\"><span class='gt_from_md'> </span></span></td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n### Regression\n\nThe correspondences here represent the models that you need to run to generate (usually) the same results, not the code that will produce the same output. If you simply run the R code it will output something minimal, instead you will want to assign the model to an object. For the linear regression example, this would be `model <- lm(price ~ mpg, data = auto)` followed by using the summary function on that object `summary(model)`. \n\nI say 'usually' the same results because for some methods there seems to be some minor difference under the hood that means estimates differ slightly. For example, in the negative binomial example the standard errors for `mpg` are different at the 4th decimal. Always check your outputs :)\n\nFinally, I only include some basic regression models here. In epidemiology we often need to deal with observations that aren't independent, such as in longitudinal studies. Methods such as generalised estimating equations (GEEs) and mixed effects models are supported in R. For GEEs, see the `gee` package ([link](https://cran.r-project.org/web/packages/gee/gee.pdf){target=\"_blank\"}). For mixed effects models, the `lme4` ([link](https://cran.r-project.org/web/packages/lme4/index.html){target=\"_blank\"}) is popular.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"herczokacy\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#herczokacy table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#herczokacy thead, #herczokacy tbody, #herczokacy tfoot, #herczokacy tr, #herczokacy td, #herczokacy th {\n  border-style: none;\n}\n\n#herczokacy p {\n  margin: 0;\n  padding: 0;\n}\n\n#herczokacy .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#herczokacy .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#herczokacy .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#herczokacy .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#herczokacy .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#herczokacy .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#herczokacy .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#herczokacy .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#herczokacy .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#herczokacy .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#herczokacy .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#herczokacy .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#herczokacy .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#herczokacy .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#herczokacy .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#herczokacy .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#herczokacy .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#herczokacy .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#herczokacy .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#herczokacy .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#herczokacy .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#herczokacy .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#herczokacy .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#herczokacy .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#herczokacy .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#herczokacy .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#herczokacy .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#herczokacy .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#herczokacy .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#herczokacy .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#herczokacy .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#herczokacy .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#herczokacy .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#herczokacy .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#herczokacy .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#herczokacy .gt_left {\n  text-align: left;\n}\n\n#herczokacy .gt_center {\n  text-align: center;\n}\n\n#herczokacy .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#herczokacy .gt_font_normal {\n  font-weight: normal;\n}\n\n#herczokacy .gt_font_bold {\n  font-weight: bold;\n}\n\n#herczokacy .gt_font_italic {\n  font-style: italic;\n}\n\n#herczokacy .gt_super {\n  font-size: 65%;\n}\n\n#herczokacy .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#herczokacy .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#herczokacy .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#herczokacy .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#herczokacy .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#herczokacy .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#herczokacy .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#herczokacy .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#herczokacy div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" style=\"table-layout:fixed;width:100%;\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <colgroup>\n    <col style=\"width:20%;\"/>\n    <col style=\"width:30%;\"/>\n    <col style=\"width:30%;\"/>\n    <col style=\"width:20%;\"/>\n  </colgroup>\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Model\">Model</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Stata\">Stata</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"R\">R</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Note\">Note</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Model\" class=\"gt_row gt_left\"><span data-qmd-base64=\"U2ltcGxlIGxpbmVhciByZWdyZXNzaW9u\"><span class='gt_from_md'>Simple linear regression</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+cmVnIHByaWNlIG1wZzwvY29kZT4=\"><span class='gt_from_md'><code>reg price mpg</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+bG0ocHJpY2UgfiBtcGcsIGRhdGEgPSBhdXRvKTwvY29kZT4=\"><span class='gt_from_md'><code>lm(price ~ mpg, data = auto)</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"wqA=\"><span class='gt_from_md'> </span></span></td></tr>\n    <tr><td headers=\"Model\" class=\"gt_row gt_left\"><span data-qmd-base64=\"TG9naXN0aWMgcmVncmVzc2lvbg==\"><span class='gt_from_md'>Logistic regression</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+bG9naXQgZm9yZWlnbiBtcGc8L2NvZGU+\"><span class='gt_from_md'><code>logit foreign mpg</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+Z2xtKGZvcmVpZ24gfiBtcGcsIGRhdGEgPSBhdXRvLCBmYW1pbHkgPSAmcXVvdDtiaW5vbWlhbCZxdW90Oyk8L2NvZGU+\"><span class='gt_from_md'><code>glm(foreign ~ mpg, data = auto, family = &quot;binomial&quot;)</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"wqA=\"><span class='gt_from_md'> </span></span></td></tr>\n    <tr><td headers=\"Model\" class=\"gt_row gt_left\"><span data-qmd-base64=\"UG9pc3NvbiByZWdyZXNzaW9u\"><span class='gt_from_md'>Poisson regression</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+cG9pc3NvbiByZXA3OCBtcGc8L2NvZGU+\"><span class='gt_from_md'><code>poisson rep78 mpg</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+Z2xtKHJlcDc4IH4gbXBnLCBkYXRhID0gYXV0bywgZmFtaWx5ID0gJnF1b3Q7cG9pc3NvbiZxdW90Oyk8L2NvZGU+\"><span class='gt_from_md'><code>glm(rep78 ~ mpg, data = auto, family = &quot;poisson&quot;)</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"wqA=\"><span class='gt_from_md'> </span></span></td></tr>\n    <tr><td headers=\"Model\" class=\"gt_row gt_left\"><span data-qmd-base64=\"TmVnYXRpdmUgYmlub21pYWwgcmVncmVzc2lvbg==\"><span class='gt_from_md'>Negative binomial regression</span></span></td>\n<td headers=\"Stata\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+bmJyZWcgZGlzcGxhY2VtZW50IG1wZzwvY29kZT4=\"><span class='gt_from_md'><code>nbreg displacement mpg</code></span></span></td>\n<td headers=\"R\" class=\"gt_row gt_left\"><span data-qmd-base64=\"PGNvZGU+TUFTUzo6Z2xtLm5iKGRpc3BsYWNlbWVudCB+IG1wZywgZGF0YSA9IGF1dG8pPC9jb2RlPg==\"><span class='gt_from_md'><code>MASS::glm.nb(displacement ~ mpg, data = auto)</code></span></span></td>\n<td headers=\"Note\" class=\"gt_row gt_left\"><span data-qmd-base64=\"UmVxdWlyZXMgdGhlIDxjb2RlPk1BU1M8L2NvZGU+IHBhY2thZ2U=\"><span class='gt_from_md'>Requires the <code>MASS</code> package</span></span></td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n## Data visualisation\n\nAnother great feature of R is `ggplot2`, the `tidyverse` package used to create plots. There are so many ways to customise plots using `ggplot2` that I won't cover them here - check out the documentation if you want to learn more.\n\nNote that some of these plots don't make any sense, it's just to demonstrate the code.\n\n### Histograms\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nauto |>\n  ggplot(aes(x = weight)) +\n  geom_histogram() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n### Density plots\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nauto |>\n  ggplot(aes(x = weight)) +\n  geom_density() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n### Bar charts\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nauto |>\n  ggplot(aes(x = headroom, y = rep78)) +\n  geom_col() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n### Line charts\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nauto |>\n  ggplot(aes(x = weight, y = length)) +\n  geom_line() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n### Scatter plots\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nauto |>\n  ggplot(aes(x = weight, y = length)) +\n  geom_point() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n### Box plots\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nauto |>\n  ggplot(aes(x = foreign, y = price, group = foreign)) +\n  geom_boxplot() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n### Violin plots\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nauto |>\n  ggplot(aes(x = foreign, y = price, group = foreign)) +\n  geom_violin() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n## Customising data visualisations\n\nThe different plots are outlined above but you will probably want to customise them further so they look nice. I already did some theming with `theme_bw()` but we can do more than that. Note my preference for `theme_bw()` over `theme_minimal()` (another popular theme) stems from the fact that `theme_bw()` has a white background, while `theme_minimal()` has a transparent background, which causes problems in some circumstances.\n\nTo make changes to elements of a plot you add things to it with the `+` symbol. In the examples above I specify the `ggplot2` aesthetics, what kind of plot (the `geom_*` part), and finish with the theme. These components are connected with the `+` symbol.\n\nSince `ggplot2` is so heavily customisable, I won't go into too much detail here except to provide code that demonstrates some of the common things you'd want to do to a plot. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nauto |>\n  ggplot(aes(x = weight, y = length, colour = factor(foreign))) +\n  geom_point(\n    size = 4, # This changes the size of the dots\n  ) +\n  scale_x_continuous(\n    name = \"Weight (lbs)\", # The axis title\n    labels = scales::label_comma(), # Adds a comma to the axis, using the scales package\n    limits = c(1500,5000), # The limits of the axis\n    breaks = seq(1500,5000,500), # Change main grid lines, which is where labels appear\n            # seq() specifies we want them to go from 1000 to 6000 in increments of 500\n    minor_breaks = NULL, # Turn off the smaller grid lines\n  ) +\n  scale_y_continuous(\n    name = \"Length (inches)\",\n    limits = c(140, 240),\n    breaks = seq(140,240,10),\n    minor_breaks = NULL\n  ) +\n  scale_colour_manual(\n    name = \"Car origin\", # Changes the legend name\n    values = c(\"red\",\"blue\"), # Set the colour of the points\n    labels = c(\"Domestic\",\"Foreign\") # Change the legend label names\n  ) +\n  theme_bw() +\n  theme(\n    text = element_text(\n      family = \"serif\", # Change the font of the plot\n      size = 16, # Change the text size\n      ),\n    legend.position = \"bottom\" # Change where the legend is\n    ) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}